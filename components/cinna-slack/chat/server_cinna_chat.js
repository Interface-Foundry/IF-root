// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩтЪкЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЭдЁЯОАтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯМЪтЭдЁЯОАЁЯОАЁЯОАЁЯОАтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯОАЁЯОАЁЯОАЁЯСХЁЯОАЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯОАЁЯОАЁЯТЩЁЯТЩЁЯСХЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯСХЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪк
// тЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪк
// тЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТнЁЯТнЁЯТЩЁЯТнЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪк
// тЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪкЁЯМЪтЪктЪктЪктЪктЪкЁЯТнЁЯТнЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪкЁЯТнЁЯТнЁЯТнтЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪк
// тЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТнтЪктЪктЪктЪктЪктЪктЪкЁЯТнЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪк
// тЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯМЪтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТнЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪк
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТнтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯМЪтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТнЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪлтЪлтЪлтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪлтЪлтЪлтЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪкЁЯМЪтЪлтЪлтЪлтЪктЪктЪктЪктЪктЪктЪкЁЯМЪЁЯМЪтЪктЪктЪктЪктЪктЪлтЪлтЪлтЪлтЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪкЁЯМХтЪлтЪлтЪлтЪктЪктЪктЪкЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКтЪктЪктЪкЁЯМЪтЪлтЪлтЪлтЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪкЁЯМХтЪктЪктЪктЪктЪкЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКтЪктЪктЪкЁЯМХтЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯРЩтЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТ░ЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКЁЯНКтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЫтЪкЁЯТЫтЪкЁЯНКтЪкЁЯТ░тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩ
// тЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯРЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩтЪк
// тЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪк
// тЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩтЪктЪк
// тЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯРЩЁЯТЩЁЯТЩтЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪкЁЯТЩЁЯТЩЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪкЁЯТЩтЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪкЁЯМЪЁЯТЩтЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
// тЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪктЪк
//Cinna 0.6 (Cardamom)

var http = require('http');
var request = require('request');
var async = require('async');
var skype = require('./skype-sdk');
var builder = require('botbuilder');
var dialog = require('./components/io').dialog;


// Initialize the BotService
var botService = new skype.BotService({
    messaging: {
        botId: "28:DbvPeqOxe3ChrhwcMZbLLS7",
        serverUrl : "https://apis.skype.com",
        requestTimeout : 15000,
        appId: '8bd4c38f-10a9-4ebe-a34d-d2f6f57789e6',
        appSecret: 'DbvPeqOxe3ChrhwcMZbLLS7'
    }
});

// Create bot and add dialogs
var bot = new builder.SkypeBot(botService);

// Install First Run middleware and dialog
bot.use(function (session, next) {
    if (!session.userData.firstRun) {
        console.log('session: ',session)
        session.userData.firstRun = true;
        session.userData.io = {
            source: {
                'origin':'skype',
                'channel':session.message.from.address.toString(),
                'org':'skype',
                'id':'skype' + "_" + session.message.from.address.toString() //for retrieving chat history in node memory,
            },
            'msg': session.message.text
        }
        session.replaceDialog('/'); 
    } else {
        session.replaceDialog('/'); 
    }
});

bot.add('/', dialog);

// bot.add('/firstRun', [
//     function (session) {
//         builder.Prompts.text(session, "Hello... What's your name?");
//     },
//     function (session, results) {
//         // We'll save the prompts result and return control to main through
//         // a call to replaceDialog(). We need to use replaceDialog() because
//         // we intercepted the original call to main and we want to remove the
//         // /firstRun dialog from the callstack. If we called endDialog() here
//         // the conversation would end since the /firstRun dialog is the only 
//         // dialog on the stack.
//         session.userData.name = results.response;
//         session.replaceDialog('/'); 
//     }
// ]);

//set env vars
var config = require('config');

process.on('uncaughtException', function (err) {
  console.error('uncaught exception', new Date())
  console.error(err.stack);
});

//load kip modules
var ioKip = require("./components/io.js");

// website ЁЯМП
var express = require('express');
var app = express();
var server = require('http').createServer(app);
app.use(express.static(__dirname + '/static'))
app.get('/healthcheck', function (req, res) {
  res.send('ЁЯТм ЁЯМП')
})

server.listen(8000, function(e) {
  if (e) { console.error(e) }
  console.log('chat app listening on port 8000 ЁЯМП ЁЯТм')
})

//globals
var messageHistory = {}; //fake database, stores all users and their chat histories

//load incoming chat clients
ioKip.initSlackUsers(app.get('env'));
ioKip.loadSocketIO(server);

//incoming new slack user
app.get('/newslack', function(req, res) {
    ioKip.newSlack();
});

//incoming new slack user
app.post('/slackaction', function(req, res) {
    // ioKip.newSlack();
    console.log('incoming Slack action: ',req);
    console.log('incoming Slack action BODY: ',req.body);
    //ioKip.incomingSlackAction(req.body);
});	

//incoming new slack user
app.get('/kikincoming', function(req, res) {
    // ioKip.newSlack();
});

app.post('/skype', skype.messagingHandler(botService));

