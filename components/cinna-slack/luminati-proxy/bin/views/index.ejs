<%- include header -%>
<div>
  <ul class=mdl-list>
    <li class=mdl-list__item>
      <span class=mdl-list__item-primary-content>
        <span class=mdl-list__item-icon id=network>
          <div class="mdl-spinner mdl-js-spinner is-active"></div>
        </span>
        Network Connectivity
      </span>
      <div class=mdl-tooltip for=network>Checks whether proxy was able to access the internet</div>
    </li>
    <li class=mdl-list__item>
      <span class=mdl-list__item-primary-content>
        <span class=mdl-list__item-icon id=firewall>
          <div class="mdl-spinner mdl-js-spinner is-active"></div>
        </span>
        Firewall Access
      </span>
      <div class=mdl-tooltip for=firewall>Checks whether proxy is blocked by a firewall</div>
    </li>
    <li class=mdl-list__item>
      <span class=mdl-list__item-primary-content>
        <span class=mdl-list__item-icon id=credentials>
          <div class="mdl-spinner mdl-js-spinner is-active"></div>
        </span>
        Credentials
      </span>
      <div class=mdl-tooltip for=credentials>Checks whether credentials are set up properly</div>
    </li>
  </ul>
</div>
<div class="mdl-grid">
  <% proxies.forEach(proxy=>{ %>
  <div class="mdl-cell mdl-cell--6-col" id="proxy_<%= (proxy.opt&&proxy.opt.port)||23000 %>">
    <div class="mdl-card mdl-shadow--2dp">
      <div class="mdl-card__title mdl-card--expand">
        <h2 class=mdl-card__title-text>http://127.0.0.1:<%= (proxy.opt&&proxy.opt.port)||23000 %></h2>
      </div>
      <div class=mdl-card__supporting-text>
        <div class="mdl-grid">
          <div class="mdl-cell mdl-cell--6-col">
            <table class="mdl-data-table mdl-js-data-table">
              <tbody>
                <% ['port', 'super_proxy', 'log', 'zone', 'country', 'state', 'city', 'session_timeout',
                'dns', 'pool_size', 'max_requests'].filter(key=>proxy.opt&&proxy.opt[key]).forEach(key=>{ %>
                <tr>
                  <td class="mdl-data-table__cell--non-numeric key"><%= key.replace(/_/g, ' ') %></td>
                  <td class="mdl-data-table__cell--non-numeric opt_<%= key %>"><%= proxy.opt[key] %></td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
          <div class="mdl-cell mdl-cell--6-col graph-container">
            <canvas></canvas>
          </div>
        </div>
      </div>
      <div class="mdl-card__actions mdl-card--border">
        <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"></a>
      </div>
    </div>
  </div>
  <% }) %>
</div>
<script src=//cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js></script>
<script src=//cdnjs.cloudflare.com/ajax/libs/smoothie/1.27.0/smoothie.min.js></script>
<script>
$(function(){
  $('canvas').each(function(){
    var opt = {
      millisPerPixel: 100,
      grid: {fillStyle: 'rgba(151, 187, 251, 0.15)', strokeStyle: 'transparent', verticalSections: 0},
      labels: {fillStyle: '#050201'},
    };
    opt.yMinFormatter = opt.yMaxFormatter = function(value){
      return Math.round(value);
    };
    var chart = new SmoothieChart(opt);
    chart.streamTo(this, 1000);
    $(this).data({chart: chart, series: {}});
  });
  io().on('stats', function(stats){
    for (var port in stats)
    {
      var card = $('#proxy_'+port);
      var canvas = card.find('canvas');
      var size = {width: canvas.width(), height: canvas.height()};
      if (size.width!=canvas.attr('width') ||
          size.height!=canvas.attr('height'))
      {
        canvas.attr(size);
      }
      var data = canvas.data();
      var now = Date.now();
      Object.keys(stats[port]).forEach(function(ip, i){
        var stat = stats[port][ip];
        var series = data.series[ip];
        if (!series)
        {
          series = data.series[ip] = new TimeSeries();
          var color = i*(360/Object.keys(stats[port]).length)%360;
          data.chart.addTimeSeries(series, {
            lineWidth:1,
            strokeStyle: '#808080',
            fillStyle: 'hsla('+color+', 100%, 50%, 0.25)',
          });
        }
        series.append(now, stat.active_requests);
      });
    }
  }).on('health', function(data){
    for (var key in data)
    {
      $('<i>', {class: 'material-icons'}).text(data[key] ? 'done' : 'error')
        .appendTo($('#'+key).empty());
    }
  });
});
</script>
<%- include footer -%>
